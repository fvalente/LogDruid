project : LogDruid

URL : https://github.com/fvalente/LogDruid

Chart statistics and events retrieved in logs files through configurable regular expressions

Logdruid is an application to gather, aggregate and chart information from log files.
Templates are available and can be easily created to gather information in any type of log files.
It uses regular expressions that are constructed graphically and can be verified in the application against data samples.
This facility is at the core of the application and is used both to group files depending on any path/filename criteria (such as PID) and to mine data items from the files.
The information is aggregated for each groups and displayed in time series chart. it is possible to toggle the display of any recordings and to zoom or go to a specific time for all the charts at the same time.
Once configured for a specific type of logs set, the gathering and display of the information can be done in one click. The application is multi-threaded at its core and can handle significant amount of data quickly.   

Recordings
type: metrics|incidents/events/errors
how to process events
record: duration, nb occurrences, capturer data
display: parametric graph

point of entry : regex to match line
data point: name, regexp, delimitator,value type

representation
aggregation

todo next:
OK recursive file listing as source
OK actual check of select value on recordingitem
OK choice of date format in record item
OK pattern to select files identified as one source
add auto population of examples

manual selection of files
csv input instead of regex pattenr

reporting: find longest occurences
in graph: see incidents


special features:
% of file mapping
records of patterns(regex) to ignore
errors|incident occurences
recordings discovery helper (listing of unmapped recordings)  
OK import / export Recordings
check Recordings occurences, detect data issue
edit and mass edit recordings
Mass Recordings auto discovery
exporting data to standard formats
OK multi files analysis
report builder
selecting date format (or auto detect?)
add edition of source matches so to add to recording examples 

statistics (summaries, GC,)
events (errors, thread dumps, alerts)
file metadata (file timestamp, data extracted (date, pid))